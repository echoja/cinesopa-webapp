type Sopakit {
  id: Int
  num: String
  title: String
  year: Int
  managing_date: DateTime
  description: String
  image_url: String
  image_alt: String
  status: String
}

type SopakitsResult {
  total: Int
  list: [Sopakit]
}

type createSopakitResult {
  success: Boolean
  code: String
}

type updateSopakitResult {
  success: Boolean
  code: String
}

type removeSopakitResult {
  success: Boolean
  code: String
}

input SopakitInput {
  num: String
  title: String
  year: Int
  managing_date: DateTime
  description: String
  image_url: String
  image_alt: String
  status: String
}

input SopakitSearch {
  page: Int
  perpage: Int
  status: String
}

type SopakitsShownItem {
  sopakit: Sopakit,
  products: [Product],
}

type SopakitsShownResult {
  sopakitsShownItems: [SopakitsShownItem]
  noKeywordProducts: [Product]
}

extend type Query {
  sopakitsAdmin(condition: SopakitSearch!): SopakitsResult
  sopakits(condition: SopakitSearch!): SopakitsResult
  sopakitsShown: SopakitsShownResult # 소파킷 목록에서 보여지는 것들을 얻는 endpoint
}

extend type Mutation {
  createSopakit(input: SopakitInput!): createSopakitResult
  updateSopakit(id: Int, input: SopakitInput!): updateSopakitResult
  removeSopakit(id: Int!): removeSopakitResult
}
