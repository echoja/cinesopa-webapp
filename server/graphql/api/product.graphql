type Option {
  id: String
  content: String
  left: Int
  price: Int
}

input OptionInput {
  id: String
  content: String
  left: Int
  price: Int
}

type Product {
  id: Int
  status: String
  product_type: String
  featured_image_url: String
  featured_image_alt: String
  content_main: String
  content_sub: String
  side_phrase: String
  notice: String
  is_notice_default: Boolean
  name: String
  options: [Option]
  c_date: DateTime
  related_film: Film # Film Id. 영화 정보는 기본적으로 여기서 전부 가지고 온다.
  related_cartitems: [String]
  meta: JSON
  kit: Sopakit
}

extend type Query {
  product(id: Int): Product
}

type createProductResult {
  success: Boolean
  code: String
}
type updateProductResult {
  success: Boolean
  code: String
}
type removeProductResult {
  success: Boolean
  code: String
}

input ProductInput {
  product_type: String
  status: String
  featured_image_url: String
  featured_image_alt: String
  content_main: String
  content_sub: String
  side_phrase: String
  notice: String
  is_notice_default: Boolean
  name: String
  options: [OptionInput]
  c_date: DateTime
  related_film: Int # Film Id. 영화 정보는 기본적으로 여기서 전부 가지고 온다.
  related_cartitems: [String]
  meta: JSON
  kit_id: Int
}

# type Product {
#   id: Int
#   status: String
#   product_type: String
#   featured_image_url: String
#   featured_image_alt: String
#   is_notice_default: Boolean
#   content_main: String
#   content_sub: String
#   side_phrase: String
#   notice: String
#   name: String
#   options: [Option]
#   related_film: Film # 입력할 때에는 id지만 출력할 때는 영화와 관련된 모든 정보를 얻을 수 있게 함
#   # search: String
# }

type ProductsResult {
  total: Int
  list: [Product]
}

input ProductSearch {
  product_type: String
  page: Int
  perpage: Int
  search: String
}

type ProductsResult {
  total: Int
  list: [Product]
}

extend type Query {
  product(id: Int!): Product
  productAdmin(id: Int!): Product
  products(condition: ProductSearch!): ProductsResult
  productsAdmin(condition: ProductSearch!): ProductsResult
}

extend type Mutation {
  createProduct(input: ProductInput!): createProductResult
  updateProduct(id: Int!, input: ProductInput!): updateProductResult
  removeProduct(id: Int!): removeProductResult
}
