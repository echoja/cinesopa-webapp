type Person {
  role_type: String
  name: String
  name_en: String
  role: String
}

type Company {
  name: String
  name_en: String
  role: String
}

type Review {
  title: String
  url: String
  source: String
  author: String
}

type Video {
  is_main_trailer: Boolean
  youtube_iframe: String
  title: String
}

type Award {
  festival_name: String
  year: Int
  person_name: String
  award_name: String
  award_type: String
}

type Photo {
  mongo_file_id: String
  filename: String
  preview_url: String
  alt: String
  title: String
}

type Film {
  title: String
  title_en: String
  kobis_code: String
  genres: [String]
  show_time: Int
  type_name: String
  prod_date: DateTime
  open_date: DateTime
  people: [Person]
  companies: [Company]
  watch_grade: String
  reviews: [Review]
  star_naver: Int
  star_daum: Int
  star_cine21: Int
  poster: String # File에 대한 ObjectId
  poster_url: String
  photos: [Photo] # File에 대한 ObjectId의 배열
  id: Int
  videos: [Video]
  awards: [Award]
  synopsis: String
  note: String
  tags: [String]
  is_featured: Boolean # 특집 칸에 올라가있는가?
  is_opened: Boolean # 개봉되었는지 여부
  featured_steel: String # 특집 칸에 올라가있을 때의 이미지 File에 대한 ObjectId
  featured_color: String
  featured_synopsis: String
  badge_text: String # 뱃지에 들어갈 텍스트
  badge_color: String
  status: String
  meta: JSON # Mixed
}

type Films {
  total: Int
  list: [Film]
}

# inputs

input PersonInput {
  role_type: String
  name: String
  name_en: String
  role: String
}

input CompanyInput {
  name: String
  name_en: String
  role: String
}

input ReviewInput {
  title: String
  url: String
  source: String
  author: String
}

input VideoInput {
  is_main_trailer: Boolean
  youtube_iframe: String
  title: String
}

input AwardInput {
  festival_name: String
  year: Int
  person_name: String
  award_name: String
  award_type: String
}

input PhotoInput {
  mongo_file_id: String
  filename: String
  preview_url: String
  alt: String
  title: String
}

input FilmInput {
  title: String
  title_en: String
  kobis_code: String
  genres: [String]
  show_time: Int
  type_name: String
  prod_date: DateTime
  open_date: DateTime
  people: [PersonInput]
  companies: [CompanyInput]
  watch_grade: String
  reviews: [ReviewInput]
  star_naver: Int
  star_daum: Int
  star_cine21: Int
  poster: String # File에 대한 ObjectId
  poster_url: String
  photos: [PhotoInput] 
  videos: [VideoInput]
  awards: [AwardInput]
  synopsis: String
  note: String
  tags: [String]
  is_featured: Boolean
  is_opened: Boolean
  featured_steel: String
  featured_color: String
  featured_synopsis: String
  badge_text: String
  badge_color: String
  status: String
  meta: JSON # Mixed
}

input FilmSearch {
  page: Int
  perpage: Int
  prod_gte: DateTime
  prod_lte: DateTime
  open_gte: DateTime
  open_lte: DateTime
  tags: [String]
  search: String
  is_opened: Boolean
}

extend type Query {
  film(id: Int!): Film
  films(condition: FilmSearch!): Films
  filmsAdmin(condition: FilmSearch!): Films
  filmsFeatured: Films
}

extend type Mutation {
  createFilm(input: FilmInput!): Film
  updateFilm(id: Int!, input: FilmInput!): Film
  removeFilm(id: Int!): Film
}
