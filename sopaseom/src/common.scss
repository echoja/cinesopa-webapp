@import 'plugins/custom-style.scss';

$desktop-max-width: 100%;

$desktop-header-height: 80px;
// $desktop-min-x-margin: 40px;
$desktop-min-x-margin: 10%;
$desktop-footer-height: 120px;

$mobile-min-x-margin: 20px;
$mobile-header-height: 60px;

/* subheader */
$desktop-subheader-font-size: 22px;
$mobile-subheader-font-size: 20px;
$desktop-subheader-height: 58px;
$mobile-subheader-height: 48px;

$mobile-sopakit-slide-padding: 70px;

$simple-footer-height: 55px;
$desktop-simple-footer-height: $simple-footer-height;
$mobile-simple-footer-height: $simple-footer-height;

$cinesopa-logo-color: #323e48;

$main-wrapper-padding-bottom: 30px;
/* only for sopakit */

$dt-sopakit-content-wrapper-mt: 50px;
$dt-sopakit-content-neg: $desktop-header-height + $desktop-simple-footer-height +
  2px;
$dt-sopakit-last-page-neg: $dt-sopakit-content-neg + $desktop-subheader-height +
  $dt-sopakit-content-wrapper-mt + $main-wrapper-padding-bottom;

// for animation break with sticky

// $animation-classes: (
//   fade-enter-active,
//   fade-leave-actiive,
//   left-right-enter-active,
//   left-right-leave-active
// );

// 페이지 전환 transition 시,
// position: sitkcy 인 요소의
// top이 이상하게 계산되는 문제 수정.
// transition 하는 동안에는 top을 0으로 설정하여 위치가 어긋나지 않도록 함.
// (이유는 본인도 모르겠다.)

@mixin prevent-break-top0($selector) {
  .fade-enter-active #{$selector},
  .fade-leave-active #{$selector},
  .left-right-enter-active #{$selector},
  .left-right-leave-active #{$selector},
  .slide-enter-active #{$selector},
  .slide-leave-active #{$selector} {
    top: 0;
  }
}

// @each $class in $animation-classes {
//   .#{$value} {

//   }
// }
// $grid-breakpoints: custom-style.$grid-breakpoints;
// @include respond-above(sm) {}
@mixin min-with($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($grid-breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

// @include respond-above(sm) {}
@mixin max-with($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($grid-breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}
